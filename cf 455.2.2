You are given an integer N. Consider all possible segments on the coordinate axis with endpoints at integer points with coordinates between
0 and N, inclusive; there will be  of them.

You want to draw these segments in several layers so that in each layer the segments don't overlap (they might touch at the endpoints 
though). You can not move the segments to a different location on the coordinate axis.

Find the minimal number of layers you have to use for the given N.



 #include <iostream>
using namespace std;

int main() {
       long long int n,ans;
       cin>>n;
       int t=n/2;
       ans=t*(t+1);
       if(n%2==1)
       ans+=(n+1)/2;
       cout<<ans;
	return 0;
}
